{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Deploys VNet, ILB ASE, App Gateway, and public IP address",
        "description": "This template deploys a Virtual Network with subnets for an App Service Environment and an Application 
        Gateway. The ASE is deployed with a private IP address, so a routing rule is set on the App Gateway to route traffic from the public IP address
        to the internal domain name of the web app. The template also deploys an App Service Plan and Linux Web App."
    },
    "parameters": {
        "webAppName": {
            "type": "string"
        },


        "alwaysOn": {
            "type": "bool",
            "defaultValue": true
        },
        "sku": {
            "type": "string",
            "defaultValue": "IsolatedV2"
        },
        "skuCode": {
            "type": "string",
            "defaultValue": "I1V2"
        },
        "workerSize": {
            "type": "string",
            "defaultValue": "6"
        },
        "workerSizeId": {
            "type": "string",
            "defaultValue": "6"
        },
        "numberOfWorkers": {
            "type": "string",
            "defaultValue": "1"
        },
        "linuxFxVersion": {
            "type": "string",
            "defaultValue": "JBOSSEAP|7-java11"
        },


        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "ilb-ase-vnet"
        },
        "dedicatedHostCount": {
            "type": "string",
            "defaultValue": "0"
        },
        "zoneRedundant": {
            "type": "bool",
            "defaultValue": false
        },
        "virtualNetworkAddress": {
            "type": "string",
            "defaultValue": "192.168.250.0/23"
        },
        "ASEsubnetName": {
            "type": "string",
            "defaultValue": "ase-subnet"
        },
        "ASEsubnetAddress": {
            "type": "string",
            "defaultValue": "192.168.250.0/24"
        },
        "gatewaySubnetName": {
            "type": "string",
            "defaultValue": "gateway-subnet"
        },
        "gatewaySubnetAddress": {
            "type": "string",
            "defaultValue": "192.168.251.0/24"
        },
        "delegationName": {
            "type": "string",
            "defaultValue": "ilb-ase-delegation"
        },
        "ilbMode": {
            "type": "int",
            "defaultValue": 3
        },


        "tier": {
            "type": "string",
            "defaultValue": "Standard_v2"
        },
        "skuSize": {
            "type": "string",
            "defaultValue": "Standard_v2"
        },
        "capacity": {
            "type": "int",
            "defaultValue": 2
        },
        "zones": {
            "type": "array",
            "defaultValue": []
        },
        "publicIpAddressName": {
            "type": "string",
            "defaultValue": "public-ip-address"
        },
        "gatewaySku": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "allocationMethod": {
            "type": "string",
            "defaultValue": "Static"
        },
        "publicIpZones": {
            "type": "array",
            "defaultValue": []
        }
    },
    "variables": {
        "aseName": "[concat(parameters('webAppName'),'-ilb-ase')]",
        "location": "[resourceGroup().location]",
        "hostingPlanName": "[concat(parameters('webAppName'),'-plan')]",
        "privateZoneName": "[concat(variables('aseName'),'.appserviceenvironment.net')]",
        "virtualNetworkId": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetId": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('aseSubnetName'))]",
        "hostingEnvironmentProfile": {
            "id": "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Web/hostingEnvironments', variables('aseName'))]"
        },
        "gatewaySubnetRef": "[concat(variables('virtualNetworkId'), '/subnets/', parameters('gatewaySubnetName'))]",
        "applicationGatewayName": "[concat('gateway-',variables('aseName'))]",
        "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName'))]",
        "customDomainName": "[concat(parameters('webAppName'), '.internal')]",
        "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('publicIpAddressName'))]"
    },
    "resources": [
        {
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddress')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('ASEsubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('ASEsubnetAddress')]",
                            "delegations": [
                                {
                                    "name": "[parameters('delegationName')]",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/hostingEnvironments"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "[parameters('gatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('gatewaySubnetAddress')]",
                            "delegations": []
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-08-01",
            "type": "Microsoft.Web/hostingEnvironments",
            "name": "[variables('aseName')]",
            "kind": "ASEV3",
            "location": "[variables('location')]",
            "properties": {
                "name": "[variables('aseName')]",
                "location": "[variables('location')]",
                "dedicatedHostCount": "[parameters('dedicatedHostCount')]",
                "zoneRedundant": "[parameters('zoneRedundant')]",
                "InternalLoadBalancingMode": "[parameters('ilbMode')]",
                "virtualNetwork": {
                    "id": "[variables('subnetId')]"
                }
            },
            "tags": {},
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ]
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[variables('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[variables('location')]",
            "kind": "linux",
            "tags": null,
            "dependsOn": [
                "[concat('Microsoft.Web/hostingEnvironments/', variables('aseName'))]"
            ],
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]",
                "reserved": true,
                "hostingEnvironmentProfile": "[variables('hostingEnvironmentProfile')]"
            },
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('webAppName')]",
            "type": "Microsoft.Web/sites",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
            ],
            "properties": {
                "name": "[parameters('webAppName')]",
                "siteConfig": {
                    "appSettings": [],
                    "linuxFxVersion": "[parameters('linuxFxVersion')]",
                    "alwaysOn": "[parameters('alwaysOn')]"
                },
                "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                "clientAffinityEnabled": false,
                "hostingEnvironmentProfile": "[variables('hostingEnvironmentProfile')]",
                "hostNameSslStates": [
                    {
                        "name": "[variables('customDomainName')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/sites/slots",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('webAppName'), '/staging')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "siteConfig": {
                    "appSettings": [],
                    "linuxFxVersion": "[parameters('linuxFxVersion')]",
                    "alwaysOn": "[parameters('alwaysOn')]"
                },
                "serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                "clientAffinityEnabled": false,
                "hostingEnvironmentProfile": "[variables('hostingEnvironmentProfile')]",
                "hostNameSslStates": [
                    {
                        "name": "staging-slot.internal",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('webAppName'), '/', variables('customDomainName'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
            ],
            "properties": {
                "siteName": "[parameters('webAppName')]",
                "hostNameType": "Verified"
            } 
        },
        {
            "type": "Microsoft.Web/sites/slots/hostNameBindings",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('webAppName'), '/staging/staging-slot.internal')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', parameters('webAppName'), 'staging')]",
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
            ],
            "properties": {
                "siteName": "[concat(parameters('webAppName'),'(staging)')]",
                "hostNameType": "Verified"
            }
        },
        {
            "apiVersion": "2018-09-01",
            "type": "Microsoft.Network/privateDnsZones",
            "name": "[variables('privateZoneName')]",
            "location": "global",
            "dependsOn": [
                "[concat('Microsoft.Web/hostingEnvironments/', variables('aseName'))]"
            ],
            "tags": {},
            "properties": {},
            "resources": [
                {
                    "apiVersion": "2018-09-01",
                    "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                    "name": "[concat(variables('privateZoneName'), '/vnetLink')]",
                    "location": "global",
                    "properties": {
                        "virtualNetwork": {
                            "id": "[variables('virtualNetworkId')]"
                        },
                        "registrationEnabled": false
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Network/privateDnsZones/', variables('privateZoneName'))]"
                    ]
                },
                {
                    "apiVersion": "2018-09-01",
                    "type": "Microsoft.Network/privateDnsZones/A",
                    "name": "[concat(variables('privateZoneName'), '/*')]",
                    "location": "global",
                    "properties": {
                        "ttl": 3600,
                        "aRecords": [
                            {
                                "ipv4Address": "[reference(concat(resourceId('Microsoft.Web/hostingEnvironments', variables('aseName')), '/configurations/networking'), '2019-08-01').internalInboundIpAddresses[0]]"
                            }
                        ]
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Network/privateDnsZones/', variables('privateZoneName'))]"
                    ]
                },
                {
                    "apiVersion": "2018-09-01",
                    "type": "Microsoft.Network/privateDnsZones/A",
                    "name": "[concat(variables('privateZoneName'), '/*.scm')]",
                    "location": "global",
                    "properties": {
                        "ttl": 3600,
                        "aRecords": [
                            {
                                "ipv4Address": "[reference(concat(resourceId('Microsoft.Web/hostingEnvironments', variables('aseName')), '/configurations/networking'), '2019-08-01').internalInboundIpAddresses[0]]"
                            }
                        ]
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Network/privateDnsZones/', variables('privateZoneName'))]"
                    ]
                },
                {
                    "apiVersion": "2018-09-01",
                    "type": "Microsoft.Network/privateDnsZones/A",
                    "name": "[concat(variables('privateZoneName'), '/@')]",
                    "location": "global",
                    "properties": {
                        "ttl": 3600,
                        "aRecords": [
                            {
                                "ipv4Address": "[reference(concat(resourceId('Microsoft.Web/hostingEnvironments', variables('aseName')), '/configurations/networking'), '2019-08-01').internalInboundIpAddresses[0]]"
                            }
                        ]
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Network/privateDnsZones/', variables('privateZoneName'))]"
                    ]
                }
            ]
        },
        {
            "name": "[variables('applicationGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-09-01",
            "location": "[variables('location')]",
            "zones": "[parameters('zones')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIpAddressName'))]"
            ],
            "tags": {},
            "properties": {
                "sku": {
                    "name": "[parameters('skuSize')]",
                    "tier": "[parameters('tier')]",
                    "capacity": "[parameters('capacity')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('gatewaySubnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('publicIPRef')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "Port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "backend-pool-for-ase",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "[reference(concat(resourceId('Microsoft.Web/hostingEnvironments', variables('aseName')), '/configurations/networking'), '2019-08-01').internalInboundIpAddresses[0]]",
                                    "fqdn": null
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "basic-http-setting",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 20,
                            "hostName": "[variables('customDomainName')]",
                            "probe": {
                                "id": "[concat(variables('applicationGatewayId'), '/probes/probe-for-basic-http-setting')]"
                            }
                        }
                    },
                    {
                        "name": "slot-http-setting",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "hostName": "staging-slot.internal",
                            "pickHostNameFromBackendAddress": false,
                            "affinityCookieName": "ApplicationGatewayAffinity",
                            "path": "/",
                            "requestTimeout": 20,
                            "probe": {
                                "id": "[concat(variables('applicationGatewayId'), '/probes/probe-for-slot')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "http-listener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "sslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "routing-rule-for-ase-name",
                        "properties": {
                            "RuleType": "PathBasedRouting",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayId'), '/httpListeners/http-listener')]"
                            },
                            "priority": null,
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/backend-pool-for-ase')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/basic-http-setting')]"
                            },
                            "urlPathMap": {
                                "id": "[concat(variables('applicationGatewayId'), '/urlPathMaps/slot-listener')]"
                            }
                        }
                    }
                ],
                "urlPathMaps": [
                    {
                        "name": "slot-listener",
                        "properties": {
                            "defaultBackendAddressPool": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/backend-pool-for-ase')]"
                            },
                            "defaultBackendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/basic-http-setting')]"
                            },
                            "pathRules": [
                                {
                                    "name": "slot-target",
                                    "properties": {
                                        "paths": [
                                            "/staging",
                                            "/staging/*"
                                        ],
                                        "backendAddressPool": {
                                            "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/backend-pool-for-ase')]"
                                        },
                                        "backendHttpSettings": {
                                            "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/slot-http-setting')]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "enableHttp2": false,
                "sslCertificates": [],
                "probes": [
                    {
                        "name": "probe-for-basic-http-setting",
                        "properties": {
                            "backendHttpSettings": [
                                {
                                    "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/basic-http-setting')]"
                                }
                            ],
                            "interval": 30,
                            "minServers": 0,
                            "path": "/",
                            "protocol": "Http",
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": false,
                            "host": "[variables('customDomainName')]"
                        }
                    },
                    {
                        "name": "probe-for-slot",
                        "properties": {
                            "protocol": "Http",
                            "host": "staging-slot.internal",
                            "path": "/",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": false,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-399"
                                ]
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIpAddressName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "[parameters('gatewaySku')]"
            },
            "zones": "[parameters('publicIpZones')]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('allocationMethod')]"
            }
        }
    ],
    "outputs": {
    }
}