name: Deploy Pull Request to staging slot

on:
  pull_request:
    branches:
    - master

env:
  WEBAPP: new_ase_ase
  GATEWAY_NAME: gateway-new-ase-ase-ilb-ase
  RESOURCE_GROUP: freeberg-fresh-ase-oct-22
  STORAGE_ACCOUNT: artifacts1010101  # This must be *globally* unique, so append your name or numbers. (Only lowercase letters and numbers allowed. No spaces, dashes, underscores.)

  LOCATION: eastus
  CONTAINER: stagingartifacts
  PUBLIC_IP: public-ip-address
  EXPIRY_TIME: 10 minutes

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        
    - name: Build with Maven
      run: mvn package
      
    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: target/ROOT.war

  create-slot:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Create the slot
      run: |
        SLOT_NAME="pr-${{ github.event.number }}"
        HOSTNAME="${SLOT_NAME}.internal"
        PROBE_NAME="probe-for-${SLOT_NAME}"
        HTTP_SETTING_NAME="http-setting-for-${SLOT_NAME}"
        URL_PATHS="url-paths-for-${SLOT_NAME}"

        # Create and configure the slot

        ## Create slot
        az webapp deployment slot create \
            --name $WEBAPP \
            --slot $SLOT_NAME \
            -g ${{ env.RESOURCE_GROUP }}

        ## Add an internal hostname on the slot
        az webapp config hostname add \
            --slot $SLOT_NAME \
            --hostname $HOSTNAME \
            --webapp-name $WEBAPP \
            -g ${{ env.RESOURCE_GROUP }}

        # Configure the App Gateway

        ## Create a new HTTP Probe
        az network application-gateway probe create \
            --gateway-name ${{ env.GATEWAY_NAME }} \
            -g $RESOURCE_GROUP \
            --name $PROBE_NAME \
            --host $HOSTNAME \
            --protocol "Http" \
            --path "/"

        ## Create a new HTTP Setting
        az network application-gateway http-settings create \
            --gateway-name ${{ env.GATEWAY_NAME }} \
            -g $RESOURCE_GROUP \
            -n $HTTP_SETTING_NAME \
            --port 80 \
            --path "/" \
            --host-name $HOSTNAME \
            --enable-probe true \
            --probe $PROBE_NAME

        ## Update the paths on the routing rule, adding the paths for the new slot  
        az network application-gateway url-path-map rule create \
            --gateway-name ${{ env.GATEWAY_NAME }} \
            -g $RESOURCE_GROUP \
            -n "url-paths-for-${SLOT_NAME}" \
            --path-map-name "routing-rule-for-ase-name" \
            --paths "/${SLOT_NAME},/${SLOT_NAME}/*" \
            --http-settings $HTTP_SETTING_NAME \
            --address-pool "backend-pool-for-ase"

  publish:
    runs-on: ubuntu-latest
    needs: create-slot
    
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: app

    - name: Set SAS token expiration
      run: echo "expiry=`date -u -d "$EXPIRY_TIME" '+%Y-%m-%dT%H:%MZ'`" >> $GITHUB_ENV

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.29.1
        inlineScript: |
          SUBSCRIPTION=$(az account show --query id -o tsv)
          
          az storage account create   -n $STORAGE_ACCOUNT   -g $GROUP -l westus
          az storage container create -n $CONTAINER --account-name $STORAGE_ACCOUNT
          
          # Deploy the app and supporting files
          source deploy.sh

  comment-on-pr:
    runs-on: ubuntu-latest
    needs: create-slot

    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Get public IP address
      run: echo "IP_ADR=`z network public-ip show --name $PUBLIC_IP -g $RESOURCE_GROUP --query ipAddress -o tsv`" >> $GITHUB_ENV

    - name: Comment on PR with the preview link
      uses: mshick/add-pr-comment@master
      with:
        message: |
          ## Preview link: [${{ env.PUBLIC_IP }}/pr-${{ github.event.number }}](${{ env.PUBLIC_IP }}/pr-${{ github.event.number }})

          - Your changes have been deployed to the preview site. The preview site will update as you add more commits to this branch. 
          - The preview link is shareable, but will be deleted when the pull request is merged or closed.

          > *This is an automated message.*
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
